#!/bin/bash
#
# Pre-commit hook to automatically update README version badge
# Runs before each commit to ensure version badges stay current
#

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîÑ Pre-commit: Updating version badges...${NC}"

# Get current Git version
get_git_version() {
    if git describe --tags --dirty --always >/dev/null 2>&1; then
        git describe --tags --dirty --always 2>/dev/null
    else
        echo "v1.0.0-$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown')"
    fi
}

VERSION=$(get_git_version)
echo -e "${GREEN}üìã Current version: ${VERSION}${NC}"

# Update README.md version badge
if [ -f README.md ]; then
    # Create version badge URL
    VERSION_ENCODED=$(echo "$VERSION" | sed 's/-/%20/g' | sed 's/+/%2B/g')
    BADGE_URL="https://img.shields.io/badge/version-${VERSION_ENCODED}-blue.svg"
    
    # Update the version badge in README
    if grep -q "img.shields.io/badge/version-" README.md; then
        # Replace existing version badge
        sed -i.bak "s|https://img.shields.io/badge/version-[^)]*|${BADGE_URL}|g" README.md && rm README.md.bak
        echo -e "${GREEN}‚úÖ Updated version badge in README.md${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  No version badge found in README.md (looking for shields.io badge)${NC}"
    fi
    
    # Stage the updated README if it was modified
    if git diff --name-only | grep -q "README.md"; then
        git add README.md
        echo -e "${GREEN}‚úÖ Staged updated README.md${NC}"
    fi
fi

# Update DEPLOYMENT.md if it exists and has version references
if [ -f DEPLOYMENT.md ]; then
    if grep -q "Version:" DEPLOYMENT.md; then
        sed -i.bak "s/Version: .*/Version: ${VERSION}/" DEPLOYMENT.md && rm DEPLOYMENT.md.bak
        
        if git diff --name-only | grep -q "DEPLOYMENT.md"; then
            git add DEPLOYMENT.md
            echo -e "${GREEN}‚úÖ Updated and staged DEPLOYMENT.md${NC}"
        fi
    fi
fi

echo -e "${GREEN}‚úÖ Pre-commit version update complete!${NC}"
exit 0
