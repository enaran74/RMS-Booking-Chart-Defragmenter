# ==============================================================================
# RMS Booking Chart Defragmenter - Unified Docker Compose
# ==============================================================================
# This configuration runs both the original CLI analyzer and web interface
# in a single integrated deployment with PostgreSQL database

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: defrag-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-defrag_db}
      POSTGRES_USER: ${DB_USER:-defrag_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-DefragDB2024!}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - defrag-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-defrag_user} -d ${DB_NAME:-defrag_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application Container
  defrag-app:
    build: .
    container_name: defrag-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # RMS API Credentials
      - AGENT_ID=${AGENT_ID}
      - AGENT_PASSWORD=${AGENT_PASSWORD}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_PASSWORD=${CLIENT_PASSWORD}
      
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-defrag_db}
      - DB_USER=${DB_USER:-defrag_user}
      - DB_PASSWORD=${DB_PASSWORD:-DefragDB2024!}
      
      # Web Application
      - WEB_APP_PORT=${WEB_APP_PORT:-8000}
      - WEB_APP_HOST=${WEB_APP_HOST:-0.0.0.0}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-here}
      - PROPERTY_REFRESH_INTERVAL_HOURS=${PROPERTY_REFRESH_INTERVAL_HOURS:-1}
      
      # Original Application
      - TARGET_PROPERTIES=${TARGET_PROPERTIES:-ALL}
      - USE_TRAINING_DB=${USE_TRAINING_DB:-false}
      - ENABLE_EMAILS=${ENABLE_EMAILS:-false}
      - SEND_CONSOLIDATED_EMAIL=${SEND_CONSOLIDATED_EMAIL:-false}
      - CONSOLIDATED_EMAIL_RECIPIENT=${CONSOLIDATED_EMAIL_RECIPIENT:-operations@discoveryparks.com.au}
      
      # SMTP Configuration
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SENDER_EMAIL=${SENDER_EMAIL}
      - SENDER_DISPLAY_NAME=${SENDER_DISPLAY_NAME:-DHP Defragmentation System}
      - APP_PASSWORD=${APP_PASSWORD}
      - TEST_RECIPIENT=${TEST_RECIPIENT}
      
      # Scheduling
      - CRON_SCHEDULE=${CRON_SCHEDULE:-0 2 * * *}
      - ENABLE_CRON=${ENABLE_CRON:-true}
      
      # Logging and Output
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_DIR=${LOG_DIR:-/app/logs}
      - OUTPUT_DIR=${OUTPUT_DIR:-/app/output}
      
      # Container Configuration
      - TZ=${TZ:-Australia/Sydney}
      
      # Health Check
      - HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-30s}
      - HEALTH_CHECK_TIMEOUT=${HEALTH_CHECK_TIMEOUT:-10s}
      - HEALTH_CHECK_RETRIES=${HEALTH_CHECK_RETRIES:-3}
      
      # Backup
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
      - BACKUP_ENABLED=${BACKUP_ENABLED:-true}
    
    ports:
      - "${WEB_APP_PORT:-8000}:8000"
    
    volumes:
      # Persistent data volumes
      - defrag_logs:/app/logs
      - defrag_output:/app/output
      - defrag_backups:/app/backups
      
      # Configuration volume (optional, for external config)
      - ./config:/app/config:ro
      
      # Timezone data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    
    networks:
      - defrag-network
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    
    # Health check for the unified application
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: 60s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

# Named volumes for persistent data
volumes:
  postgres_data:
    driver: local
    name: defrag_postgres_data
  defrag_logs:
    driver: local
    name: defrag_logs
  defrag_output:
    driver: local
    name: defrag_output
  defrag_backups:
    driver: local
    name: defrag_backups

# Network for service communication
networks:
  defrag-network:
    driver: bridge
    name: defrag_network
